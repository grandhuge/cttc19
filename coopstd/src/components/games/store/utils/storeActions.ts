
export const createStoreActions = (gameState: any, updateGameState: any) => {
  const addCapitalToStore = () => {
    const amount = prompt('‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô‡πÉ‡∏´‡πâ‡∏£‡πâ‡∏≤‡∏ô (‡∏ö‡∏≤‡∏ó):');
    const capitalAmount = parseInt(amount || '0');
    
    if (isNaN(capitalAmount) || capitalAmount <= 0) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      return;
    }
    
    if (capitalAmount > gameState.money) {
      alert(`‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏≠! ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ${gameState.money.toLocaleString()} ‡∏ö‡∏≤‡∏ó`);
      return;
    }
    
    updateGameState({
      money: gameState.money - capitalAmount,
      storeData: {
        ...gameState.storeData,
        storeMoney: gameState.storeData.storeMoney + capitalAmount
      }
    });
    
    alert(`‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÄ‡∏û‡∏¥‡πà‡∏° ${capitalAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n‡∏ó‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${(gameState.storeData.storeMoney + capitalAmount).toLocaleString()} ‡∏ö‡∏≤‡∏ó`);
  };

  const withdrawCapital = () => {
    const maxWithdraw = Math.floor(gameState.storeData.storeMoney * 0.2);
    if (maxWithdraw <= 0) {
      alert('‡∏ó‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 5 ‡∏ö‡∏≤‡∏ó)');
      return;
    }

    const amount = prompt(`‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏ó‡∏∏‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡πâ‡∏≤‡∏ô (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ${maxWithdraw.toLocaleString()} ‡∏ö‡∏≤‡∏ó):`);
    const withdrawAmount = parseInt(amount || '0');
    
    if (isNaN(withdrawAmount) || withdrawAmount <= 0) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      return;
    }
    
    if (withdrawAmount > maxWithdraw) {
      alert(`‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ${maxWithdraw.toLocaleString()} ‡∏ö‡∏≤‡∏ó (20% ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô)`);
      return;
    }
    
    updateGameState({
      money: gameState.money + withdrawAmount,
      storeData: {
        ...gameState.storeData,
        storeMoney: gameState.storeData.storeMoney - withdrawAmount
      }
    });
    
    alert(`‡∏ñ‡∏≠‡∏ô‡∏ó‡∏∏‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÑ‡∏î‡πâ‡πÄ‡∏á‡∏¥‡∏ô ${withdrawAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n‡∏ó‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${(gameState.storeData.storeMoney - withdrawAmount).toLocaleString()} ‡∏ö‡∏≤‡∏ó`);
  };

  const handleAccountSummary = () => {
    const { totalProfit, dailySales, storeMoney } = gameState.storeData;
    
    if (totalProfit <= 0 && dailySales <= 0) {
      alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ');
      return;
    }

    const newStoreCapital = storeMoney + dailySales;
    const savingsIncrease = totalProfit;

    const confirmation = confirm(
      `üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤\n\n` +
      `üí∞ ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ${dailySales.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n` +
      `üìà ‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∞‡∏™‡∏°: ${totalProfit.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n\n` +
      `üè™ ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì:\n` +
      `   ‚Ä¢ ‡∏ó‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏¥‡∏°: ${storeMoney.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n` +
      `   ‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: +${dailySales.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n` +
      `   ‚Ä¢ ‡∏ó‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà: ${newStoreCapital.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n\n` +
      `üíé ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏∞‡∏™‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°: ${savingsIncrease.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n` +
      `‚≠ê ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°: ${Math.floor(totalProfit / 5)} ‡πÅ‡∏ï‡πâ‡∏°\n\n` +
      `‡∏´‡∏•‡∏±‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏õ‡πá‡∏ô 0\n‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`
    );

    if (confirmation) {
      updateGameState({
        savings: gameState.savings + savingsIncrease,
        experience: gameState.experience + Math.floor(totalProfit / 5),
        storeData: {
          ...gameState.storeData,
          storeMoney: newStoreCapital,
          totalProfit: 0,
          dailySales: 0
        }
      });

      alert(
        `‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n` +
        `üè™ ‡∏ó‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà: ${newStoreCapital.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n` +
        `üíé ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏∞‡∏™‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°: ${savingsIncrease.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n` +
        `‚≠ê ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°: ${Math.floor(totalProfit / 5)} ‡πÅ‡∏ï‡πâ‡∏°\n\n` +
        `‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß!`
      );
    }
  };

  return {
    addCapitalToStore,
    withdrawCapital,
    handleAccountSummary
  };
};
