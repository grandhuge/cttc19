
import React from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { TrendingUp, Gift, Users, Megaphone } from 'lucide-react';

interface PromotionDialogProps {
  isOpen: boolean;
  onClose: () => void;
  storeMoney: number;
  hasActivePromotion?: boolean;
  onSelectPromotion: (promotion: any) => void;
}

const PromotionDialog = ({ 
  isOpen, 
  onClose, 
  storeMoney, 
  hasActivePromotion = false,
  onSelectPromotion 
}: PromotionDialogProps) => {
  const promotions = [
    {
      id: 'flash_sale',
      name: '‚ö° Flash Sale',
      description: '‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ 20% ‡∏î‡∏∂‡∏á‡∏î‡∏π‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏° 80%',
      cost: 200,
      effect: { sales: 1.8, duration: 60000 },
      icon: TrendingUp
    },
    {
      id: 'free_gift',
      name: 'üéÅ ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏°',
      description: '‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡∏£‡∏ö 50 ‡∏ö‡∏≤‡∏ó ‡πÅ‡∏ñ‡∏°‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à',
      cost: 300,
      effect: { sales: 1.4, satisfaction: 10, duration: 90000 },
      icon: Gift
    },
    {
      id: 'member_day',
      name: 'üë• ‡∏ß‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
      description: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏¢‡∏°',
      cost: 250,
      effect: { sales: 1.5, popularity: 5, duration: 120000 },
      icon: Users
    },
    {
      id: 'grand_opening',
      name: 'üì¢ ‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå',
      description: '‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏î‡∏∂‡∏á‡∏î‡∏π‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà',
      cost: 400,
      effect: { sales: 2.0, maxCustomers: 3, duration: 180000 },
      icon: Megaphone
    }
  ];

  const handleSelectPromotion = (promotion) => {
    onSelectPromotion(promotion);
    onClose();
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl">
        <DialogHeader>
          <DialogTitle className="text-center text-xl">
            üé™ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
          </DialogTitle>
          {hasActivePromotion && (
            <div className="text-center text-sm text-amber-600 bg-amber-50 p-2 rounded">
              ‚ö†Ô∏è ‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà
            </div>
          )}
        </DialogHeader>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {promotions.map((promotion) => {
            const IconComponent = promotion.icon;
            const canAfford = storeMoney >= promotion.cost && !hasActivePromotion;
            
            return (
              <Card 
                key={promotion.id} 
                className={`cursor-pointer transition-all ${
                  canAfford ? 'hover:shadow-lg hover:scale-105' : 'opacity-50'
                } ${hasActivePromotion ? 'border-gray-300' : ''}`}
              >
                <CardHeader className="text-center">
                  <div className="w-12 h-12 bg-gradient-to-r from-pink-500 to-purple-500 rounded-full flex items-center justify-center mx-auto mb-2">
                    <IconComponent className="w-6 h-6 text-white" />
                  </div>
                  <CardTitle className="text-lg">{promotion.name}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-gray-600 mb-4 text-center">
                    {promotion.description}
                  </p>
                  <div className="text-center mb-4">
                    <div className="text-lg font-bold text-red-600">
                      ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢: {promotion.cost.toLocaleString()} ‡∏ö‡∏≤‡∏ó
                    </div>
                    <div className="text-sm text-gray-500">
                      ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: {promotion.effect.duration / 1000} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                    </div>
                    {promotion.effect.sales && (
                      <div className="text-xs text-green-600">
                        ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢: +{Math.round((promotion.effect.sales - 1) * 100)}%
                      </div>
                    )}
                  </div>
                  <Button 
                    onClick={() => {
                      if (canAfford) {
                        handleSelectPromotion(promotion);
                      }
                    }}
                    className="w-full bg-gradient-to-r from-pink-500 to-purple-500 hover:from-pink-600 hover:to-purple-600"
                    disabled={!canAfford}
                  >
                    {hasActivePromotion 
                      ? '‡∏£‡∏≠‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' 
                      : canAfford 
                        ? '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏ô‡∏µ‡πâ' 
                        : `‡∏ó‡∏∏‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ (‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ${promotion.cost.toLocaleString()} ‡∏ö‡∏≤‡∏ó)`
                    }
                  </Button>
                </CardContent>
              </Card>
            );
          })}
        </div>
        <div className="text-center text-sm text-gray-600 mt-4">
          <p>üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: ‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏à‡∏∞‡∏°‡∏µ‡∏ú‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏•‡∏≠‡∏î‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î</p>
          <p>‡∏ó‡∏∏‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: <span className="font-semibold text-green-600">{storeMoney.toLocaleString()} ‡∏ö‡∏≤‡∏ó</span></p>
        </div>
      </DialogContent>
    </Dialog>
  );
};

export default PromotionDialog;
